Q1)
object HelloWorld {
 
  def prime(p:Int,n:Int=2):Boolean= n match {
  case x if(x==p) => true
  case x if GCD(p,x)>1 => false
  case x => prime(p,x+1)
  }

 def GCD(a:Int,b:Int):Int=b match{
 case 0 => a
 case x if x>a => GCD(x,a)
 case x => GCD(x,a%x)
    
  }


  def main(args: Array[String]) {
    println(prime(5))
    println(prime(8))
  
 }
}

Q2)

object HelloWorld {
 
  def prime(p:Int,n:Int=2):Boolean= n match {
  case x if(x==p) => true
  case x if GCD(p,x)>1 => false
  case x => prime(p,x+1)
  }

 def GCD(a:Int,b:Int):Int=b match{
 case 0 => a
 case x if x>a => GCD(x,a)
 case x => GCD(x,a%x)
    
  }
def printN(n:Int,m:Int):Any={
  if(n<m)
  {
      printN(n+1,m)
      if(prime(n))
      {
        print( n + " " )
      }
      
  }
 
  }

  def main(args: Array[String]) {
  printN(2,10)

   }
  
 
}

Q3)

object HelloWorld {
 
  def sum(n : Int) :  Int = {
    if (n==1)
    {
      1
    }
    else
    {
      n+sum(n-1)
    }
  }

  def main(args: Array[String]) {
       var m : Int =5
       println(sum(m))

  }
 }

Q4)

object HelloWorld {

  def isEven(n : Int) : Boolean = n match{
    case 0 => true
    case _ => isOdd(n-1)
  }
  
  def isOdd(n : Int) : Boolean = !(isEven(n))

  def main(args: Array[String]) {
     println(isEven(4))
     println(isOdd(5))

  }
 }

Q5)

object HelloWorld {

  def isEven(n : Int) : Boolean = n match{
    case 0 => true
    case _ => isOdd(n-1)
  }
  
  def isOdd(n : Int) : Boolean = !(isEven(n))
  
   def sum(n : Int) :  Int = {
    if (n==2)
    {
      2
    }
    else if(isEven(n))
    {
      n+sum(n-2)
    }
    else
    {
      n-1+sum(n-3)
    }
  }


  def main(args: Array[String]) {
      println(sum(15))

  }
 }

Q6)

object HelloWorld {
def fib(n:Int):Int = n match{
  case n if n==0 => 0
  case n if n==1 => 1
  case n => fib(n-1)+fib(n-2)
}

  def main(args: Array[String]) {
   println(fib(2))

  }
 }
